// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Resume parsing AI agent.
 *
 * - parseResume - A function that handles the resume parsing process.
 * - ParseResumeInput - The input type for the parseResume function.
 * - ParseResumeOutput - The return type for the parseResume function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ParseResumeInputSchema = z.object({
  resumeDataUri: z
    .string()
    .describe(
      "A resume file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type ParseResumeInput = z.infer<typeof ParseResumeInputSchema>;

const ParseResumeOutputSchema = z.object({
  skills: z.array(z.string()).describe('A list of skills extracted from the resume.'),
  experience: z
    .array(
      z.object({
        title: z.string().describe('The job title.'),
        company: z.string().describe('The company name.'),
        dates: z.string().describe('The start and end dates of the job.'),
        description: z.string().describe('A description of the job responsibilities.'),
      })
    )
    .describe('A list of job experiences extracted from the resume.'),
  education: z
    .array(
      z.object({
        degree: z.string().describe('The degree name.'),
        institution: z.string().describe('The institution name.'),
        dates: z.string().describe('The start and end dates of the education.'),
      })
    )
    .describe('A list of education experiences extracted from the resume.'),
});
export type ParseResumeOutput = z.infer<typeof ParseResumeOutputSchema>;

export async function parseResume(input: ParseResumeInput): Promise<ParseResumeOutput> {
  return parseResumeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'parseResumePrompt',
  input: {schema: ParseResumeInputSchema},
  output: {schema: ParseResumeOutputSchema},
  prompt: `You are an expert resume parser.

You will extract skills, experience, and education from the resume.

Resume: {{media url=resumeDataUri}}

Skills:
{{#each skills}}
- {{this}}
{{/each}}

Experience:
{{#each experience}}
- Title: {{title}}
  Company: {{company}}
  Dates: {{dates}}
  Description: {{description}}
{{/each}}

Education:
{{#each education}}
- Degree: {{degree}}
  Institution: {{institution}}
  Dates: {{dates}}
{{/each}}`,
});

const parseResumeFlow = ai.defineFlow(
  {
    name: 'parseResumeFlow',
    inputSchema: ParseResumeInputSchema,
    outputSchema: ParseResumeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
